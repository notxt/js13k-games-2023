"use strict";
(() => {
  var R = (e) => ({
    arc: (t, r, h, n, v, M) => e.arc(t, r, h, n, v, M),
    arcTo: (t, r, h, n, v) => e.arcTo(t, r, h, n, v),
    beginPath: () => e.beginPath(),
    fill: () => e.fill(),
    fillRect: (t, r, h, n) => e.fillRect(t, r, h, n),
    fillStyle: (t) => (e.fillStyle = t),
    lineCap: (t) => (e.lineCap = t),
    lineTo: (t, r) => e.lineTo(t, r),
    lineWidth: (t) => (e.lineWidth = t),
    moveTo: (t, r) => e.moveTo(t, r),
    restore: () => e.restore(),
    rotate: (t) => e.rotate(t),
    save: () => e.save(),
    stroke: () => e.stroke(),
    strokeStyle: (t) => (e.strokeStyle = t),
    translate: (t, r) => e.translate(t, r),
  });
  var D = (e, f, p) => ({ x: p(e / 2), y: p(f / 2) });
  var { PI: P, sin: W } = Math,
    F = (e) => (p, m) => {
      for (let o of m) {
        e.fillStyle("white");
        let l = 20,
          a = 20,
          T = 20,
          s = 20,
          y = 10,
          b = 8;
        e.save(),
          e.translate(o.x + l + b, o.y - 3),
          e.fillStyle("white"),
          e.beginPath(),
          e.arc(0, 0, y, 0, P * 2),
          e.fill(),
          e.fillStyle("pink"),
          e.beginPath(),
          e.arc(0, 0, y - 2, 0, Math.PI * 2),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x + l + T - 5, o.y + s - 2);
        let d = 10;
        e.beginPath(),
          e.fillStyle("black"),
          e.rotate((-4 * P) / 6),
          e.moveTo(0, 0),
          e.lineTo(0, d),
          e.rotate(P / 12),
          e.moveTo(0, 0),
          e.lineTo(0, d),
          e.stroke(),
          e.restore(),
          e.save(),
          e.translate(o.x, o.y),
          e.fillRect(0, 0, l, a),
          e.restore(),
          e.save(),
          e.translate(o.x, o.y),
          e.fillStyle("white"),
          e.beginPath(),
          e.arc(0, a / 2, a / 2, (3 * P) / 2, P / 2, !0),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x + l, o.y),
          e.beginPath(),
          e.moveTo(0, 0),
          e.lineTo(0, s),
          e.lineTo(T, s),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x + l + T - 5, o.y + s - 2),
          e.beginPath(),
          e.fillStyle("black"),
          e.rotate((3 * P) / 6),
          e.moveTo(0, 0),
          e.lineTo(0, d),
          e.rotate(P / 12),
          e.moveTo(0, 0),
          e.lineTo(0, d),
          e.stroke(),
          e.restore(),
          e.save(),
          e.translate(o.x + l - b, o.y - 3),
          e.fillStyle("white"),
          e.beginPath(),
          e.arc(0, 0, y, 0, Math.PI * 2),
          e.fill(),
          e.fillStyle("pink"),
          e.beginPath(),
          e.arc(0, 0, y - 2, 0, Math.PI * 2),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x + l, o.y + 10);
        let w = 3,
          k = 1.7;
        e.fillStyle("black"),
          e.beginPath(),
          e.arc(0, 0, w, 0, Math.PI * 2),
          e.fill(),
          e.fillStyle("white"),
          e.beginPath(),
          e.arc(-1, -1, k, 0, Math.PI * 2),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x + l + 6, o.y + 8),
          e.fillStyle("black"),
          e.beginPath(),
          e.arc(0, 0, w, 0, Math.PI * 2),
          e.fill(),
          e.fillStyle("white"),
          e.beginPath(),
          e.arc(-1, -1, k, 0, Math.PI * 2),
          e.fill(),
          e.restore(),
          e.save(),
          e.translate(o.x - a / 2, o.y + a / 2);
        let g = { x: -20, y: 0 },
          S = { x: -20, y: -20 },
          u = 20;
        e.strokeStyle("pink"),
          e.lineCap("round"),
          e.lineWidth(3),
          e.beginPath(),
          e.moveTo(0, 0),
          e.arcTo(g.x, g.y, S.x, S.y, u),
          e.stroke(),
          e.restore();
        let i = 7,
          t = 0,
          r = 3,
          h = l;
        e.save(), e.translate(o.x, o.y + a);
        let n = W(p / 60);
        e.rotate(n),
          e.beginPath(),
          e.moveTo(0, 0),
          e.lineTo(0, i),
          e.lineTo(t, i),
          e.stroke(),
          e.restore(),
          e.save(),
          e.translate(o.x + r, o.y + a),
          e.rotate(-n),
          e.beginPath(),
          e.moveTo(0, 0),
          e.lineTo(0, i),
          e.lineTo(t, i),
          e.stroke(),
          e.restore(),
          e.save(),
          e.translate(o.x + h, o.y + a),
          e.rotate(n),
          e.beginPath(),
          e.moveTo(0, 0),
          e.lineTo(0, i),
          e.lineTo(t, i),
          e.stroke(),
          e.restore(),
          e.save(),
          e.translate(o.x + h + r, o.y + a),
          e.rotate(-n),
          e.beginPath(),
          e.moveTo(0, 0),
          e.lineTo(0, i),
          e.lineTo(t, i),
          e.stroke(),
          e.restore();
      }
    };
  var { round: I } = Math,
    C = (e) => {
      let f = e.getContext("2d");
      if (f === null) throw new Error("ctx is null");
      let p = R(f),
        { height: m, width: o } = e,
        l = F(p),
        a = [],
        T = D(o, m, I);
      a.push(T);
      let s = (y) => {
        console.log(o, m, y),
          f.clearRect(0, 0, o, m),
          l(y, a),
          requestAnimationFrame(s);
      };
      return s;
    };
  var L = document.querySelector("canvas");
  if (L === null) throw new Error("canvas is null");
  var q = C(L);
  requestAnimationFrame(q);
})();
